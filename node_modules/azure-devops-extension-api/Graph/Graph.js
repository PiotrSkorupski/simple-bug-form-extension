/*
 * ---------------------------------------------------------
 * Copyright(C) Microsoft Corporation. All rights reserved.
 * ---------------------------------------------------------
 */
define(["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var GraphMemberSearchFactor;
    (function (GraphMemberSearchFactor) {
        /**
         * Domain qualified account name (domain\\alias)
         */
        GraphMemberSearchFactor[GraphMemberSearchFactor["PrincipalName"] = 0] = "PrincipalName";
        /**
         * Display name
         */
        GraphMemberSearchFactor[GraphMemberSearchFactor["DisplayName"] = 1] = "DisplayName";
        /**
         * Administrators group
         */
        GraphMemberSearchFactor[GraphMemberSearchFactor["AdministratorsGroup"] = 2] = "AdministratorsGroup";
        /**
         * Find the identity using the identifier (SID)
         */
        GraphMemberSearchFactor[GraphMemberSearchFactor["Identifier"] = 3] = "Identifier";
        /**
         * Email address
         */
        GraphMemberSearchFactor[GraphMemberSearchFactor["MailAddress"] = 4] = "MailAddress";
        /**
         * A general search for an identity.
         */
        GraphMemberSearchFactor[GraphMemberSearchFactor["General"] = 5] = "General";
        /**
         * Alternate login username (Basic Auth Alias)
         */
        GraphMemberSearchFactor[GraphMemberSearchFactor["Alias"] = 6] = "Alias";
        /**
         * Find identity using DirectoryAlias
         */
        GraphMemberSearchFactor[GraphMemberSearchFactor["DirectoryAlias"] = 8] = "DirectoryAlias";
    })(GraphMemberSearchFactor = exports.GraphMemberSearchFactor || (exports.GraphMemberSearchFactor = {}));
    var GraphTraversalDirection;
    (function (GraphTraversalDirection) {
        GraphTraversalDirection[GraphTraversalDirection["Unknown"] = 0] = "Unknown";
        GraphTraversalDirection[GraphTraversalDirection["Down"] = 1] = "Down";
        GraphTraversalDirection[GraphTraversalDirection["Up"] = 2] = "Up";
    })(GraphTraversalDirection = exports.GraphTraversalDirection || (exports.GraphTraversalDirection = {}));
});
