import*as tslib_1 from"tslib";import*as React from"react";export var makeCancelable=function(t){var n=!1,e=new Promise(function(r,o){var i=function(){return n&&(e.catch(function(){}),o({isCanceled:!0})),n};t.then(function(t){return i()||r(t)}),t.catch(function(t){return i()||o(t)})});return{promise:e,cancel:function(){n=!0}}};export function timeout(t,n,e){return new Promise(function(r,o){var i=setTimeout(function(){o(null==e?"Timed out after "+n+" ms.":e)},n);t.then(function(t){r(t),clearTimeout(i)},function(t){o(t),clearTimeout(i)})})};export function wait(t){return tslib_1.__awaiter(this,void 0,void 0,function(){return tslib_1.__generator(this,function(n){return[2,new Promise(function(n){setTimeout(n,t)})]})})};export function delay(t,n){return tslib_1.__awaiter(this,void 0,void 0,function(){return tslib_1.__generator(this,function(e){switch(e.label){case 0:return[4,Promise.all([t,wait(n)])];case 1:return[2,e.sent()[0]]}})})};export function allSettled(t){var n=new Array(t.length);return new Promise(function(e){for(var r=0,o=function(o){t[o].then(function(t){n[o]={state:"fulfilled",value:t}},function(t){n[o]={state:"rejected",reason:t}}).then(function(){++r===t.length&&e(n)})},i=0;i<t.length;++i)o(i)})};export function usePromise(){var t=React.useRef([]);React.useEffect(function(){return function(){t.current&&(t.current.forEach(function(t){return t.cancel()}),t.current=null)}},[]);return{trackPromise:React.useCallback(function(n){var e=makeCancelable(n);if(!t.current)throw new Error("usePromise hook: `trackPromise` called after using component was unmounted.");return t.current.push(e),e.promise},[])}};