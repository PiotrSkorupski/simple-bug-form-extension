import * as React from "react";
import { ObservableValue } from '../../Core/Observable';
var ScreenBreakpoints = [599, 1023, 1365, 1919];
export var ScreenSize;
(function (ScreenSize) {
    ScreenSize[ScreenSize["xsmall"] = 0] = "xsmall";
    ScreenSize[ScreenSize["small"] = 1] = "small";
    ScreenSize[ScreenSize["medium"] = 2] = "medium";
    ScreenSize[ScreenSize["large"] = 3] = "large";
    ScreenSize[ScreenSize["xlarge"] = 4] = "xlarge";
})(ScreenSize || (ScreenSize = {}));
var ScreenContextImp = /** @class */ (function () {
    function ScreenContextImp() {
        var _this = this;
        this.onResize = function () {
            var size = _this.getCurrentSize();
            if (_this.size.value !== size) {
                _this.size.value = size;
            }
        };
        this.size = new ObservableValue(this.getCurrentSize());
        window.addEventListener("resize", this.onResize);
    }
    ScreenContextImp.prototype.getCurrentSize = function () {
        if (window.innerWidth <= ScreenBreakpoints[0]) {
            return 0 /* xsmall */;
        }
        else if (window.innerWidth <= ScreenBreakpoints[1]) {
            return 1 /* small */;
        }
        else if (window.innerWidth <= ScreenBreakpoints[2]) {
            return 2 /* medium */;
        }
        else if (window.innerWidth <= ScreenBreakpoints[3]) {
            return 3 /* large */;
        }
        else {
            return 4 /* xlarge */;
        }
    };
    return ScreenContextImp;
}());
export var ScreenContext = React.createContext(new ScreenContextImp());
