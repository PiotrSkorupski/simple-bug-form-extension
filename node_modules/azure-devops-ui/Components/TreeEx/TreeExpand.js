import * as tslib_1 from "tslib";
import "../../CommonImports";
import "../../Core/core.css";
import "./Tree.css";
import "./TreeExpand.css";
import * as React from "react";
import { Icon } from '../../Icon';
import { css } from '../../Util';
var defaultCollapsedProps = { iconName: "ChevronRight" };
var defaultExpandedProps = { iconName: "ChevronDown" };
var TreeExpand = /** @class */ (function (_super) {
    tslib_1.__extends(TreeExpand, _super);
    function TreeExpand() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.onMouseDown = function (event) {
            if (!event.defaultPrevented) {
                if (_this.props.onToggle) {
                    _this.props.onToggle(event);
                    event.preventDefault();
                }
            }
        };
        return _this;
    }
    TreeExpand.prototype.render = function () {
        var _a = this.props, children = _a.children, className = _a.className, depth = _a.depth, expanded = _a.expanded, _b = _a.iconCollapsedProps, iconCollapsedProps = _b === void 0 ? defaultCollapsedProps : _b, _c = _a.iconExpandedProps, iconExpandedProps = _c === void 0 ? defaultExpandedProps : _c, _d = _a.indentationSize, indentationSize = _d === void 0 ? 16 : _d;
        var iconProps = expanded ? iconExpandedProps : iconCollapsedProps;
        return (React.createElement(React.Fragment, null,
            React.createElement(Icon, tslib_1.__assign({}, iconProps, { className: css(className, "bolt-tree-expand-button font-size", !this.props.onToggle && "invisible"), onClick: this.props.onClick, onMouseDown: this.onMouseDown, style: { marginLeft: depth > 0 ? depth * indentationSize + "px" : undefined } })),
            children));
    };
    return TreeExpand;
}(React.Component));
export { TreeExpand };
