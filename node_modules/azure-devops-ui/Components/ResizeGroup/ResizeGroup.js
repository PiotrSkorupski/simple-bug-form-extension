import * as tslib_1 from "tslib";
import "../../CommonImports";
import "../../Core/core.css";
import * as React from "react";
import { ResponsiveLayout } from '../../ResponsiveLayout';
import { ObservableArray } from '../../Core/Observable';
export var ResizeGroupContext = React.createContext({});
var ResizeGroup = /** @class */ (function (_super) {
    tslib_1.__extends(ResizeGroup, _super);
    function ResizeGroup(props) {
        var _this = _super.call(this, props) || this;
        _this.onLayoutChange = function (hiddenCount) {
            if (_this.props.responsiveLayoutProps.onLayoutChange) {
                _this.props.responsiveLayoutProps.onLayoutChange(hiddenCount);
            }
            _this.overflowItems.value = _this.props.overflowMenuItems.slice(0, hiddenCount);
        };
        _this.overflowItems = new ObservableArray([]);
        return _this;
    }
    ResizeGroup.prototype.render = function () {
        return (React.createElement(ResizeGroupContext.Provider, { value: { overflowItems: this.overflowItems } },
            React.createElement(ResponsiveLayout, tslib_1.__assign({}, this.props.responsiveLayoutProps, { onLayoutChange: this.onLayoutChange }), this.props.children)));
    };
    return ResizeGroup;
}(React.Component));
export { ResizeGroup };
