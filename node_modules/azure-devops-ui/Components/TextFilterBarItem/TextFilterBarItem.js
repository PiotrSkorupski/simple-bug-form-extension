import * as tslib_1 from "tslib";
import "../../CommonImports";
import "../../Core/core.css";
import * as React from "react";
import { TextField } from '../../TextField';
import { css } from '../../Util';
import { FilterBarItem } from '../../FilterBarItem';
var DEFAULT_MAX_TEXT_LENGTH = 200;
var DEFAULT_THROTTLE_WAIT = 200;
var TextFilterBarItem = /** @class */ (function (_super) {
    tslib_1.__extends(TextFilterBarItem, _super);
    function TextFilterBarItem() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.textField = React.createRef();
        _this.onTextChanged = function (ev, text) {
            _this.setFilterValue({ value: text });
        };
        _this.onKeyDown = function (ev) {
            if (_this.props.filter) {
                switch (ev.which) {
                    case 13 /* enter */:
                        _this.props.filter.setFilterItemState(_this.props.filterItemKey, { value: _this.state.value });
                        _this.props.filter.applyChanges();
                        break;
                    case 27 /* escape */:
                        _this.setFilterValue({ value: "" });
                        _this.setState({
                            value: ""
                        });
                        _this.props.filter.applyChanges();
                        break;
                    default:
                        return;
                }
                // We only get here if the keypress has been handled.
                ev.preventDefault();
                ev.stopPropagation();
            }
        };
        return _this;
    }
    TextFilterBarItem.prototype.focus = function () {
        if (this.textField.current) {
            return this.textField.current.focus();
        }
    };
    TextFilterBarItem.prototype.render = function () {
        var value = this.state.value;
        var _a = this.props, className = _a.className, placeholder = _a.placeholder, maxTextLength = _a.maxTextLength, inputClassName = _a.inputClassName, style = _a.style, width = _a.width;
        return (React.createElement(TextField, tslib_1.__assign({ ariaLabel: placeholder, className: css(className, "bolt-text-filterbaritem flex-grow"), containerClassName: "flex-grow", inputClassName: css(inputClassName, "bolt-text-filterbaritem-input"), focusTreatment: 2 /* none */, maxLength: maxTextLength || DEFAULT_MAX_TEXT_LENGTH, onChange: this.onTextChanged, onKeyDown: this.onKeyDown, placeholder: placeholder, ref: this.textField, style: style, value: value || "", width: width }, this.getExtraTextFieldProps())));
    };
    TextFilterBarItem.prototype.getExtraTextFieldProps = function () {
        return null;
    };
    TextFilterBarItem.prototype.getThrottleWait = function () {
        var throttleWait = this.props.throttleWait;
        return throttleWait === undefined ? DEFAULT_THROTTLE_WAIT : throttleWait;
    };
    TextFilterBarItem.defaultProps = {
        isTextItem: true
    };
    return TextFilterBarItem;
}(FilterBarItem));
export { TextFilterBarItem };
