import "../../CommonImports";
import "../../Core/core.css";
import "./Table.css";
import * as React from "react";
import { ExpandableButton } from '../../Button';
import { ContextualMenu } from '../../Menu';
import * as Resources from '../../Resources.Widgets';
import { css, preventDefault } from '../../Util';
/**
 * The ColumnMore class is used as a custom column within a Table.
 *
 * It renders a fixed width column with a button that is visible on focus and
 * hover that will show a contextual menu for the given item. The caller
 * should create a new instance of this for each table. The header for this
 * column is empty.
 *
 * When creating the column you must supply delegate that is used to get the
 * menuProps when the menu is opened.
 */
var ColumnMore = /** @class */ (function () {
    /**
     * Creates an instance of ColumnMore with the appropriate delegates.
     *
     * @param menuProvider Method that returns the menu props. This is called
     *  with the item from the row the menu was activated on.
     * @param menuAvailable Optional method that is called when the row
     *  is rendered. The MoreButton will be shown if no method is supplied
     *  or if the method is supplied and it returns true.
     */
    function ColumnMore(menuProvider, menuAvailable) {
        var _this = this;
        this.columnLayout = 0 /* none */;
        this.id = "_more";
        this.width = 42;
        this.renderCell = function (rowIndex, columnIndex, tableColumn, listItem) {
            return (React.createElement("td", { key: "col-more", "aria-colindex": columnIndex, className: css("bolt-table-cell-side-action bolt-table-cell bolt-list-cell", "col-" + columnIndex), "data-column-index": columnIndex, onClick: preventDefault, onDoubleClick: preventDefault, onMouseDown: preventDefault },
                React.createElement("div", { className: "bolt-table-cell-content-reveal flex-row justify-center" }, (!_this.menuAvailable || _this.menuAvailable(listItem)) && (React.createElement(ExpandableButton, { ariaLabel: Resources.MoreTooltip, className: "bolt-table-button-more", excludeTabStop: true, hideDropdownIcon: true, iconProps: { iconName: "MoreVertical" }, renderCallout: function (dropdown, dropdownId, anchorElement) {
                        return (React.createElement(ContextualMenu, { anchorElement: anchorElement, anchorOrigin: { horizontal: "end" /* end */, vertical: "end" /* end */ }, menuProps: _this.menuProvider(listItem), menuOrigin: { horizontal: "end" /* end */, vertical: "start" /* start */ }, onDismiss: dropdown.collapse }));
                    }, subtle: true, tooltipProps: { text: Resources.MoreTooltip } })))));
        };
        this.renderHeaderCell = function (columnIndex, tableColumn) {
            return (React.createElement("td", { key: "col-more", className: css(tableColumn.headerClassName, "bolt-table-header-cell bolt-table-header-cell-empty", "col-header-" + columnIndex), "data-column-index": columnIndex }));
        };
        this.menuAvailable = menuAvailable;
        this.menuProvider = menuProvider;
    }
    return ColumnMore;
}());
export { ColumnMore };
