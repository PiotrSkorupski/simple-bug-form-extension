import*as tslib_1 from"tslib";import"../../CommonImports";import"../../Core/core.css";import*as React from"react";import{TimerManagement}from"../../Core/TimerManagement";import{FILTER_CHANGE_EVENT}from"../../Utilities/Filter";var FilterBarItem=function(t){function e(e){var r=t.call(this,e)||this;return r._onFilterChanged=function(t){t.hasOwnProperty(r.props.filterItemKey)&&r.onFilterChanged(t[r.props.filterItemKey])},r._setFilterValue=function(t){r.props.filter&&r.props.filter.setFilterItemState(r.props.filterItemKey,t)},r.timerManagement=new TimerManagement,r}return tslib_1.__extends(e,t),e.prototype.componentWillMount=function(){if(this.props.filter){var t=this.props.filter.getFilterItemState(this.props.filterItemKey);this.setState({value:t&&t.value,operator:t&&t.operator});var e=this.getThrottleWait();this.throttledSetFilterValue=e?this.timerManagement.debounce(this._setFilterValue,e,{leading:!1,trailing:!0}):this._setFilterValue}},e.prototype.componentWillReceiveProps=function(t){if(t.filter){var e=t.filter.getFilterItemState(t.filterItemKey);(this.props.setKey!==t.setKey||0===this.getThrottleWait()&&!t.filter.filterItemStatesAreEqual(t.filterItemKey,e,this.state))&&this.setState({value:e&&e.value,operator:e&&e.operator})}},e.prototype.componentDidMount=function(){this.props.filter&&this.props.filter.subscribe(this._onFilterChanged,FILTER_CHANGE_EVENT)},e.prototype.componentWillUnmount=function(){this.props.filter&&this.props.filter.unsubscribe(this._onFilterChanged,FILTER_CHANGE_EVENT),this.timerManagement.dispose()},e.prototype.onFilterChanged=function(t){this.setState({value:t&&t.value,operator:t&&t.operator})},e.prototype.getThrottleWait=function(){return 0},e.prototype.setFilterValue=function(t){this.getThrottleWait()&&this.setState({value:t&&t.value,operator:t&&t.operator}),this.throttledSetFilterValue(t)},e}(React.Component);export{FilterBarItem};