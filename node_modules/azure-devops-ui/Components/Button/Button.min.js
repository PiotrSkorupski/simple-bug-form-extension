import*as tslib_1 from"tslib";import"../../CommonImports";import"../../Core/core.css";import"./Button.css";import"./ExpandableButton.css";import*as React from"react";import{FocusGroupContext}from"../../FocusGroup";import{FocusZoneContext}from"../../FocusZone";import{Icon}from"../../Icon";import{Tooltip}from"../../TooltipEx";import{childCount,css,getSafeId}from"../../Util";import{getTabIndex}from"../../Utilities/Focus";var Button=function(o){function e(){var e=null!==o&&o.apply(this,arguments)||this;return e.buttonElement=React.createRef(),e.onClick=function(o){if(e.props.disabled)o.preventDefault();else{var t=e.props.onClick;e.focus(),t&&t(o)}},e.onFocus=function(o){e.props.onFocus&&e.props.onFocus(o),e.props.id&&e.context.onFocus&&e.context.onFocus(e.props.id)},e.onKeyDown=function(o){o.defaultPrevented||e.props.disabled||13!==o.which&&32!==o.which||(e.props.onClick&&e.props.onClick(o),o.preventDefault())},e.onMouseDown=function(o){o.defaultPrevented||e.props.disabled&&o.preventDefault()},e.onMouseLeave=function(o){if(!e.props.disabled){var t=e.props.onMouseLeave;t&&t(o)}},e.onMouseOver=function(o){if(!e.props.disabled){var t=e.props.onMouseOver;t&&t(o)}},e}return tslib_1.__extends(e,o),e.prototype.render=function(){var o=this;$DEBUG&&this.props.danger&&this.props.primary&&console.warn("primary and danger props are both set to true on Button, only one should be set to true at a time.");var e=this.props.iconProps&&!this.props.text&&0===childCount(this.props.children);return React.createElement(FocusZoneContext.Consumer,null,function(t){var r=o.props.href?"a":"button",s=React.createElement(r,{autoFocus:o.props.href?void 0:o.props.autoFocus,"aria-controls":getSafeId(o.props.ariaControls),"aria-disabled":o.props.disabled,"aria-expanded":o.props.ariaExpanded,"aria-haspopup":o.props.ariaHasPopup,"aria-label":o.props.ariaLabel,"aria-setsize":o.props.ariaSetSize,"aria-posinset":o.props.ariaPosInSet,"aria-selected":o.props.ariaSelected,"aria-checked":o.props.ariaChecked,className:css(o.props.className,"bolt-button",o.props.href&&"bolt-link-button",o.props.iconProps&&"bolt-icon-button",o.props.danger&&"danger",o.props.disabled?"disabled":"enabled",o.props.primary&&"primary",o.props.subtle&&"subtle",e&&"icon-only","bolt-focus-treatment"),"data-focuszone":o.props.disabled||o.props.excludeFocusZone?void 0:css(o.props.focusZoneId,t.focuszoneId),"data-index":o.props.dataIndex,"data-is-focusable":!o.props.excludeFocusZone,href:o.props.disabled?void 0:o.props.href,id:getSafeId(o.props.id),onBlur:o.props.onBlur,onClick:o.onClick,onMouseLeave:o.onMouseLeave,onMouseOver:o.onMouseOver,onKeyDown:o.onKeyDown,onMouseDown:o.onMouseDown,onFocus:o.onFocus,rel:o.props.rel,role:o.props.role||"button",tabIndex:getTabIndex(o.props,o.context),target:o.props.target,type:o.props.type?o.props.type:o.props.href?void 0:"button",ref:o.buttonElement},o.props.iconProps&&Icon(tslib_1.__assign({},o.props.iconProps,{className:css(o.props.iconProps.className,"left-icon")})),o.props.text&&React.createElement("span",{className:"bolt-button-text"},o.props.text),o.props.children);return o.props.tooltipProps&&(s=React.createElement(Tooltip,tslib_1.__assign({showOnFocus:e},o.props.tooltipProps),s)),s})},e.prototype.focus=function(){this.buttonElement.current&&this.buttonElement.current.focus()},e.contextType=FocusGroupContext,e}(React.Component);export{Button};