function createHoverColor(e){return{red:.94*e.red,green:.94*e.green,blue:.94*e.blue}}import*as tslib_1 from"tslib";import"../../CommonImports";import"../../Core/core.css";import"./Label.css";import*as React from"react";import{css,getSafeId}from"../../Util";import{Tooltip}from"../../TooltipEx";import{getColorString,isDark}from"../../Utilities/Color";import{FocusWithin}from"../../FocusWithin";import{FocusZoneContext}from"../../FocusZone";import{Observer}from"../../Observer";import{getTabIndex}from"../../Utilities/Focus";import{FocusGroupContext}from"../../FocusGroup";var Label=function(e){function o(o){var t=e.call(this,o)||this;return t.rootRef=React.createRef(),t.onBlur=function(){t.props.onBlur&&t.props.onBlur()},t.onFocus=function(e){t.props.onFocus&&t.props.onFocus(e),t.context&&t.props.id&&t.context.onFocus(t.props.id)},t.onHoverStart=function(){t.setState({isHovered:!0})},t.onHoverEnd=function(){t.setState({isHovered:!1})},t.state={isHovered:!1},t}return tslib_1.__extends(o,e),o.prototype.render=function(){var e=this,o=this.props,t=o.className,r=o.content,n=o.color,s=o.enableHover,c=void 0!==s&&s,i=o.excludeFocusZone,u=o.id,l=o.selected,a=o.onClick,p=o.onKeyDown,f=o.onMouseDown,m=this.state.isHovered,d=n&&m&&c?createHoverColor(n):n;return React.createElement(FocusZoneContext.Consumer,null,function(o){return React.createElement(FocusWithin,{onBlur:e.onBlur,onFocus:e.onFocus},function(s){return React.createElement(Observer,{selected:l},function(c){return React.createElement("div",{className:css(t,"bolt-label",c.selected&&"selected",n&&(e.isDark(n,c.selected)?"dark":"light")),"data-focuszone":!i&&o.focuszoneId,id:getSafeId(u),onBlur:e.onBlur,onClick:a,onFocus:e.onFocus,onKeyDown:p,onMouseDown:f,onMouseEnter:e.onHoverStart,onMouseLeave:e.onHoverEnd,ref:e.rootRef,style:e.getStyle(d,c.selected,s.hasFocus),tabIndex:getTabIndex(e.props,e.context)},React.createElement(Tooltip,{overflowOnly:!0},React.createElement("div",{className:"bolt-label-content text-ellipsis"},r)))})})})},o.prototype.focus=function(){this.rootRef.current&&this.rootRef.current.focus()},o.prototype.getStyle=function(e,o,t){if(!o&&!t&&e)return{backgroundColor:getColorString(e)}},o.prototype.isDark=function(e,o){return!(o||!e)&&isDark(e)},o.DEFAULT_COLOR={red:240,blue:240,green:240},o.contextType=FocusGroupContext,o}(React.Component);export{Label};