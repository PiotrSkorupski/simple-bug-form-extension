import*as tslib_1 from"tslib";import"../../CommonImports";import"../../Core/core.css";import"./Toggle.css";import*as React from"react";import{ObservableLike}from"../../Core/Observable";import{FocusGroupContext}from"../../FocusGroup";import{FocusZoneContext}from"../../FocusZone";import{Observer}from"../../Observer";import{Tooltip}from"../../TooltipEx";import{css,getSafeId}from"../../Util";import{getTabIndex}from"../../Utilities/Focus";var Toggle=function(e){function o(){var o=null!==e&&e.apply(this,arguments)||this;return o.toggleElement=React.createRef(),o.onClick=function(e){o.props.onChange&&!o.props.disabled&&o.props.onChange(e,void 0!==o.props.checked&&!ObservableLike.getValue(o.props.checked))},o.onFocus=function(){o.props.id&&o.context.onFocus(o.props.id)},o.onKeyDown=function(e){e.defaultPrevented||32!==e.which&&13!==e.which||(o.onClick(e),e.preventDefault())},o}return tslib_1.__extends(o,e),o.prototype.render=function(){var e=this,o=this.props,t=o.onAriaLabel,r=o.offAriaLabel,n=o.ariaLabel,c=o.className,s=o.disabled,a=o.excludeFocusZone,i=o.id,l=o.offText,p=o.onText,u=o.role,m=o.text,d=o.tooltipProps;return React.createElement(FocusZoneContext.Consumer,null,function(o){return React.createElement(Observer,{checked:e.props.checked},function(b){var f=React.createElement("div",{className:css(c,"bolt-toggle-button cursor-pointer",b.checked&&"checked",s?"disabled":"enabled"),onClick:e.onClick,onFocus:e.onFocus,onKeyDown:e.onKeyDown},React.createElement("div",{"aria-checked":b.checked,"aria-disabled":s,"aria-label":b.checked?t||n:r||n,className:"bolt-toggle-button-pill bolt-focus-treatment flex-noshrink","data-focuszone":s||a?void 0:o.focuszoneId,"data-is-focusable":!0,id:getSafeId(i),ref:e.toggleElement,role:u||"switch",tabIndex:getTabIndex(e.props,e.context)},React.createElement("div",{className:"bolt-toggle-button-icon"})),React.createElement("div",{className:"bolt-toggle-button-text"},b.checked?p||m:l||m));return d&&(f=React.createElement(Tooltip,tslib_1.__assign({},d),f)),f})})},o.prototype.focus=function(){this.toggleElement.current&&this.toggleElement.current.focus()},o.contextType=FocusGroupContext,o}(React.Component);export{Toggle};