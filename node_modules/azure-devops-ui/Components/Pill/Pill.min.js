import*as tslib_1 from"tslib";import"../../CommonImports";import"../../Core/core.css";import"./Pill.css";import*as React from"react";import{Button}from"../../Button";import{Icon}from"../../Icon";import*as Resources from"../../Resources.Widgets";import{css,getSafeId}from"../../Util";import{darken,getColorString,isDark}from"../../Utilities/Color";import{getTabIndex}from"../../Utilities/Focus";var Pill=function(e){function o(o){var t=e.call(this,o)||this;return t.onKeyDown=function(e){13===e.which&&t.props.onClick&&t.props.onClick()},t.onMouseEnter=function(e){t.props.onMouseEnter&&t.props.onMouseEnter(e),t.setState({isHoveringPrimaryElement:!0})},t.onMouseLeave=function(e){t.props.onMouseLeave&&t.props.onMouseLeave(e),t.setState({isHoveringPrimaryElement:!1})},t.onMouseLeaveButton=function(){t.setState({isHoveringPrimaryElement:!0})},t.onMouseOverButton=function(){t.setState({isHoveringPrimaryElement:!1})},t.state={isHoveringPrimaryElement:!1},t}return tslib_1.__extends(o,e),o.getColorStyle=function(e,o,t){if(e){var n=t&&o?darken(e,.06):e;return{backgroundColor:getColorString(n)}}},o.getSizeClass=function(e){switch(e){case 0:return"compact";case 2:return"large";case 1:default:return"regular"}},o.getVariantClass=function(e,o){switch(e){case 1:return"outlined";case 2:return o?css("colored",isDark(o)?"dark":"light"):"standard";case 0:default:return"standard"}},o.getDerivedStateFromProps=function(e,o){if($DEBUG){var t=e.color,n=e.iconProps,r=e.onRemoveClick,i=e.onRenderFilledVisual,s=e.size,l=void 0===s?1:s,a=e.variant;if(0===l){var c=[];n&&c.push("onRemoveClick"),r&&c.push("onRemoveClick"),i&&c.push("onRenderFilledVisual"),c.length>0&&console.warn("Pill Size is Compact, but the following fields were provided: "+c.join(", ")+" - these will be ignored. Consider changing Pill Size to Regular or Large if you need to support these items")}else i&&n&&console.warn("onRenderFilledVisual and iconProps have both been supplied; using onRenderFilledVisual");2!==a||t?t&&2!==a&&console.warn("Color was provided, but Pill Variant is not set to Colored - Pill will render as whatever variant was provided"):console.warn("Pill Variant is set to Colored, but not color was provided - Pill will render as Standard")}return o},o.prototype.render=function(){var e=this.props,t=e.contentClassName,n=e.className,r=e.color,i=e.containsCount,s=void 0!==i&&i,l=e.iconProps,a=e.id,c=e.onClick,u=e.onRemoveClick,d=e.onRenderFilledVisual,m=e.size,p=void 0===m?1:m,v=e.variant,g=void 0===v?0:v,f=this.state.isHoveringPrimaryElement;return React.createElement("div",{className:css(n,"bolt-pill flex-row flex-noshrink",o.getVariantClass(g,r),o.getSizeClass(p),s&&"count",f&&"hover",c&&"clickable"),id:getSafeId(a),onClick:c,onKeyDown:this.onKeyDown,onMouseEnter:this.onMouseEnter,onMouseLeave:this.onMouseLeave,style:o.getColorStyle(r,f,c),tabIndex:getTabIndex(this.props)},d&&React.createElement("div",{className:"bolt-pill-filled-visual flex-noshrink"},d()),l&&!d&&React.createElement(Icon,tslib_1.__assign({},l,{className:css(l.className,"bolt-pill-icon")})),React.createElement("div",{className:css(t,"bolt-pill-content")},this.props.children),u&&React.createElement(Button,{ariaLabel:Resources.RemovePillLabel,className:"bolt-pill-button",iconProps:{iconName:"Cancel"},onClick:u,onMouseLeave:this.onMouseLeaveButton,onMouseOver:this.onMouseOverButton,subtle:!0}))},o}(React.Component);export{Pill};