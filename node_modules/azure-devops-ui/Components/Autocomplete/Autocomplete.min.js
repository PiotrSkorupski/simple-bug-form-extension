import*as tslib_1 from"tslib";import"../../CommonImports";import"../../Core/core.css";import"./Autocomplete.css";import*as React from"react";import{ObservableValue,ObservableLike}from"../../Core/Observable";import{Callout}from"../../Callout";import{Label}from"../Label/Label";import{getSafeId}from"../../Util";import{Suggestions}from"./Suggestions";import{FocusZoneContext}from"../../FocusZone";var Autocomplete=function(e){function t(o){var n=e.call(this,o)||this;return n.currentSelectedColorIndex=new ObservableValue(0),n.inputRef=React.createRef(),n.onBlur=function(e){n.setState({displayPlaceholderText:!1})},n.onCheckForExactSuggestionMatches=function(e){return-1!=e.findIndex(function(e){return e.content===ObservableLike.getValue(n.props.value)})},n.onFocus=function(e){n.props.onFocus&&n.props.onFocus(e),n.setState({displayPlaceholderText:!0})},n.onInputChange=function(e){n.props.onInputValueChange(e.currentTarget.value)},n.onKeyDown=function(e){if(n.props.onKeyDown&&n.props.onKeyDown(e),!e.isDefaultPrevented()){var o=ObservableLike.getValue(n.props.value),r=n.props.onCheckForDuplicateInParent(o),a=n.state.currentSuggestions[n.state.currentSuggestionIndex];if(n.state.displayCallout)if(9===e.which&&a)n.props.onInputValueChange(a.content),e.preventDefault();else if(40===e.which){var l=r?n.state.currentSuggestions.length-1:n.state.currentSuggestions.length,i=n.state.currentSuggestionIndex+1;n.setState({currentSuggestionIndex:i>l?0:i}),e.preventDefault()}else if(38===e.which){var s=r?n.state.currentSuggestions.length-1:n.state.currentSuggestions.length,i=n.state.currentSuggestionIndex-1;n.setState({currentSuggestionIndex:i<0?s:i}),e.preventDefault()}else{if(r)return;39===e.which&&n.isNewRowSelected()?(n.currentSelectedColorIndex.value=Math.min(n.currentSelectedColorIndex.value+1,t.DEFAULT_COLORS.length-1),e.preventDefault()):37===e.which&&n.isNewRowSelected()&&(n.currentSelectedColorIndex.value=Math.max(n.currentSelectedColorIndex.value-1,0),e.preventDefault())}var u=o.trim(),c=""!==u&&n.props.onSubmit&&!r;13===e.which&&c?a?n.submit(a):n.submit({content:u,color:!n.props.disableColorPicker&&t.DEFAULT_COLORS[n.currentSelectedColorIndex.value]}):188===e.which&&(c&&n.submit({content:u,color:!n.props.disableColorPicker&&t.DEFAULT_COLORS[n.currentSelectedColorIndex.value]}),e.preventDefault())}},n.onPipClick=function(e,t,o){n.props.onSubmit&&n.props.onSubmit({content:ObservableLike.getValue(n.props.value),color:t})},n.onNewLabelClick=function(e){n.props.onSubmit&&n.props.onSubmit({content:ObservableLike.getValue(n.props.value)})},n.onSuggestionClick=function(e,t){n.submit(t)},n.onValueChange=function(e){if(clearTimeout(n.loadingDelayTimeoutId),""===e.trim())n.setState({displayCallout:!1,currentSuggestions:[]});else{var t=function(){return n.setState({isLoading:!0,displayCallout:!0})};n.state.displayCallout?t():n.loadingDelayTimeoutId=setTimeout(function(){t()},200),n.props.suggestionProvider(e).then(function(t){e===ObservableLike.getValue(n.props.value)&&(clearTimeout(n.loadingDelayTimeoutId),n.setState({currentSuggestions:t,isLoading:!1,displayCallout:!0,displayTypeAhead:!0}))})}n.setState({displayTypeAhead:!1,currentSuggestionIndex:0,currentSuggestions:[]})},n.state={currentSuggestionIndex:0,currentSuggestions:[],displayCallout:!1,displayPlaceholderText:!1,displayTypeAhead:!1,isLoading:!1},n}return tslib_1.__extends(t,e),t.prototype.render=function(){var e=this,o=this.props,n=o.ariaDescribedBy,r=o.className,a=o.customColors,l=o.disableColorPicker,i=void 0!==l&&l,s=o.onCheckForDuplicateInParent,u=o.onDuplicateInParentText,c=o.placeholder,p=o.value,g=this.state,d=g.currentSuggestions,h=g.currentSuggestionIndex,b=g.displayCallout,m=g.isLoading,S=g.displayTypeAhead,C=g.displayPlaceholderText,f=ObservableLike.getValue(p),v=d[h]?d[h].content:"",y=this.getTypeAheadValue(f,v,S),I=a||t.DEFAULT_COLORS,x=this.state.currentSuggestions[this.state.currentSuggestionIndex];return React.createElement(FocusZoneContext.Consumer,null,function(t){return React.createElement("div",{"aria-expanded":b,"aria-haspopup":"listbox","aria-owns":getSafeId("autocomplete-listbox"),className:"bolt-label-autocomplete",role:"combobox"},React.createElement("input",{"aria-activedescendant":b&&x&&x.content,"aria-autocomplete":"both","aria-controls":getSafeId("autocomplete-listbox"),"aria-describedby":getSafeId(n),className:r,"data-focuszone":t.focuszoneId,onBlur:e.onBlur,onChange:e.onInputChange,onFocus:e.onFocus,onKeyDown:e.onKeyDown,placeholder:C?c:void 0,ref:e.inputRef,tabIndex:0,type:"text",value:f}),React.createElement("input",{type:"text",className:"suggestion",value:y,disabled:!0}),b&&React.createElement(Callout,{anchorElement:e.inputRef.current,anchorOffset:{horizontal:0,vertical:10},anchorOrigin:{horizontal:"start",vertical:"end"},calloutOrigin:{horizontal:"start",vertical:"start"},className:"bolt-label-suggestions-callout",contentShadow:!0},React.createElement(Suggestions,{currentSelectedColorIndex:e.currentSelectedColorIndex,currentSelectedIndex:h,disableColorPicker:i,inputAlreadyInGroupText:u,isCurrentInputAlreadyInGroup:s(f),isLoading:m,onCheckForExactMatch:e.onCheckForExactSuggestionMatches,onColorPipClick:e.onPipClick,onNewLabelClick:e.onNewLabelClick,onSuggestionClick:e.onSuggestionClick,suggestedItems:d,swatchPickerColors:I})))})},t.prototype.componentDidMount=function(){ObservableLike.subscribe(this.props.value,this.onValueChange)},t.prototype.componentWillUnmount=function(){clearTimeout(this.loadingDelayTimeoutId),ObservableLike.unsubscribe(this.props.value,this.onValueChange)},t.prototype.componentWillReceiveProps=function(e){ObservableLike.unsubscribe(this.props.value,this.onValueChange),ObservableLike.subscribe(e.value,this.onValueChange)},t.prototype.focus=function(){this.inputRef.current.focus()},t.prototype.getTypeAheadValue=function(e,t,o){return o?e.concat(t.substr(e.length)):""},t.prototype.isNewRowSelected=function(){return this.state.currentSuggestionIndex===this.state.currentSuggestions.length&&""!=ObservableLike.getValue(this.props.value)},t.prototype.submit=function(e){this.props.onSubmit&&this.props.onSubmit(e),clearTimeout(this.loadingDelayTimeoutId),this.currentSelectedColorIndex.value=0,this.setState({currentSuggestions:[]})},t.DEFAULT_COLORS=[Label.DEFAULT_COLOR,{red:255,green:255,blue:0},{red:235,green:257,blue:128},{red:229,green:150,blue:182},{red:191,green:165,blue:221},{red:168,green:191,blue:243},{red:153,green:207,blue:198}],t}(React.Component);export{Autocomplete};