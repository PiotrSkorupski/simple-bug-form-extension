import*as tslib_1 from"tslib";import"../../CommonImports";import"../../Core/core.css";import"./Dropdown.css";import*as React from"react";import{ObservableLike}from"../../Core/Observable";import*as Utils_Accessibility from"../../Core/Util/Accessibility";import{FilterBarItem}from"../../FilterBarItem";import{ListSelection}from"../../List";import{getListBoxItemsValue,wrapListBoxItems}from"../../ListBox";import{SelectionObserver}from"../../Observer";import*as Resources from"../../Resources.Dropdown";import{arrayEquals,css}from"../../Util";import{DropdownSelection}from"../../Utilities/DropdownSelection";import{compareSelectionRanges}from"../../Utilities/Selection";import{Dropdown}from"./Dropdown";var DropdownFilterBarItem=function(e){function t(t){var o=e.call(this,t)||this;return o.dropdown=React.createRef(),o.onClearClick=function(){o.selection.clear(),Utils_Accessibility.announce(Resources.AnnounceFilterCleared)},o.onSelectionChanged=function(e){for(var t=getListBoxItemsValue(o.props.items,o.wrappedItems),r=[],i=0;i<e.length;i++)for(var s=e[i].beginIndex;s<=e[i].endIndex;s++)r.push(void 0!==t[s].data?t[s].data:t[s].id);if(o.props.filter){var n=o.props.filter.getFilterItemState(o.props.filterItemKey);(n?!arrayEquals(n.value,r):!!r.length)&&o.setFilterValue({value:r})}return!0},o.renderSelectedItems=function(e,t){var r=t[e.value[0].beginIndex].text||"";e.selectedCount>1&&(r=r+" (+"+(e.selectedCount-1)+")");var i=React.createElement("span",{className:"bolt-dropdown-filter-bar-item-selected-text"},r);return o.props.showPlaceholderAsLabel?React.createElement(React.Fragment,null,React.createElement("span",{className:"bolt-dropdown-filter-bar-item-placeholder"},o.props.placeholder+": "),i):i},o.selection=t.selection||new DropdownSelection,o.wrappedItems=wrapListBoxItems(t.items),o}return tslib_1.__extends(t,e),t.prototype.focus=function(){this.dropdown.current&&this.dropdown.current.focus()},t.prototype.componentDidMount=function(){if(e.prototype.componentDidMount.call(this),this.props.filter){var t=this.props.filter.getFilterItemState(this.props.filterItemKey);if(t&&t.value)for(var o=getListBoxItemsValue(this.props.items,this.wrappedItems),r=function(e){var r=o.findIndex(function(o){return o.id===t.value[e]||o.data===t.value[e]});i.selection.select(r,1,!0)},i=this,s=0;s<t.value.length;s++)r(s)}},t.prototype.render=function(){var e=this;return React.createElement(SelectionObserver,{selection:this.selection,onSelectionChanged:this.onSelectionChanged},function(){var t=ObservableLike.getValue(e.props.actions||[]).slice();return e.props.hideClearAction||t.push({className:"bolt-dropdown-action-right-button",disabled:0===e.selection.selectedCount,iconProps:{iconName:"Clear"},text:Resources.DropdownClearActionText,onClick:e.onClearClick}),React.createElement(Dropdown,tslib_1.__assign({},e.props,{actions:t,buttonClassName:css(e.props.buttonClassName,"bolt-dropdown-filter-bar-item"),labelClassName:css(e.props.labelClassName,"bolt-dropdown-filter-bar-item-label"),selection:e.selection,ref:e.dropdown,renderSelectedItems:e.props.renderSelectedItems||e.renderSelectedItems}))})},t.prototype.onFilterChanged=function(t){if(e.prototype.onFilterChanged.call(this,t),t&&t.value){for(var o=new ListSelection(this.selection.multiSelect),r=getListBoxItemsValue(this.props.items,this.wrappedItems),i=function(e){var i=r.findIndex(function(o){return o.id===t.value[e]||o.data===t.value[e]});o.select(i,1,!0)},s=0;s<t.value.length;s++)i(s);compareSelectionRanges(this.selection.value,o.value).length&&(this.selection.value=o.value)}else this.selection.clear()},t}(FilterBarItem);export{DropdownFilterBarItem};