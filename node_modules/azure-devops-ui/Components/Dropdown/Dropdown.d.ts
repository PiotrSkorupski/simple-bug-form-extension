import "../../CommonImports";
import "../../Core/core.css";
import "./Dropdown.css";
import * as React from "react";
import { IListSelection } from '../../List';
import { getUnselectableRanges, IListBoxItem } from '../../ListBox';
import { IFocusable } from '../../Utilities/Focus';
import { IDropdown, IDropdownProps } from "./Dropdown.Props";
export declare class Dropdown<T> extends React.Component<IDropdownProps<T>> implements IDropdown, IFocusable<{}> {
    static defaultProps: {
        renderSelectedItems: typeof renderDropdownSelectedItemText;
        filterItem: typeof filterItemByText;
        getUnselectableRanges: typeof getUnselectableRanges;
    };
    private expandableButton;
    private textFieldId;
    private filterText;
    private filteredItems;
    private filteredIndexMap;
    private filteredSelection;
    private parentSelection;
    private wrappedItems;
    constructor(props: IDropdownProps<T>);
    render(): JSX.Element;
    collapse: () => void;
    expand: () => void;
    focus(): void;
    private onExpand;
    private onDismiss;
    private renderDropdown;
    private onActivate;
    private onFilterTextChanged;
    private onSelect;
    private updateFilteredItems;
}
export declare function filterItemByText(filterText: string, item: IListBoxItem<{}>): boolean;
export declare function renderDropdownSelectedItemText(selection: IListSelection, items: IListBoxItem<{}>[]): string;
