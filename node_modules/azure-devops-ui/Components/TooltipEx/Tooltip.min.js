import*as tslib_1 from"tslib";import"../../CommonImports";import"../../Core/core.css";import"./Tooltip.css";import*as React from"react";import{Callout}from"../../Callout";import{FocusWithin}from"../../FocusWithin";import{css,getFocusVisible,getSafeId,Mouse}from"../../Util";var Tooltip=function(t){function o(o){var e=t.call(this,o)||this;return e.openTimeout=-1,e.onBlur=function(){e.setState({focus:!1}),e.existingBlur&&e.existingBlur()},e.onFocus=function(t){e.setState({anchorElement:t.target,anchorOffset:{horizontal:0,vertical:8},anchorOrigin:{horizontal:"center",vertical:"end"},anchorPoint:void 0,focus:!0,tooltipOrigin:{horizontal:"center",vertical:"start"}}),e.existingFocus&&e.existingFocus(t)},e.onMouseEnter=function(t){if(!e.props.disabled){var o=t.currentTarget;if(e.props.overflowOnly&&o.scrollWidth<=Math.ceil(o.offsetWidth))return;(e.props.text||e.props.renderContent||o.innerText&&e.props.overflowOnly)&&-1===e.openTimeout&&(e.openTimeout=window.setTimeout(function(){e.openTimeout=-1;var t;e.props.anchorOrigin||(t=Mouse.position),e.setState({anchorElement:o,anchorOffset:{horizontal:8,vertical:8},anchorOrigin:{horizontal:"center",vertical:"end"},anchorPoint:t,innerText:e.props.overflowOnly&&!e.props.text?o.innerText:void 0,mouse:!0,tooltipOrigin:{horizontal:"start",vertical:"start"}})},e.props.delayMs))}e.existingMouseEnter&&e.existingMouseEnter(t)},e.onMouseLeave=function(t){-1!==e.openTimeout&&(window.clearTimeout(e.openTimeout),e.openTimeout=-1),e.state.mouse&&e.setState({mouse:!1}),e.existingMouseLeave&&e.existingMouseLeave(t)},e.state={focus:!1,mouse:!1},e}return tslib_1.__extends(o,t),o.prototype.render=function(){var t=React.Children.only(this.props.children);this.existingMouseEnter=t.props.onMouseEnter,this.existingMouseLeave=t.props.onMouseLeave;var o=this.props.addAriaDescribedBy?getSafeId(this.props.id):void 0,e=React.cloneElement(t,Object.assign({},{"aria-describedby":o},t.props,{onMouseEnter:this.onMouseEnter,onMouseLeave:this.onMouseLeave}),t.props.children);return this.props.showOnFocus&&(this.props.text||this.props.renderContent)&&(this.existingBlur=t.props.onBlur,this.existingFocus=t.props.onFocus,e=React.createElement(FocusWithin,{onBlur:this.onBlur,onFocus:this.onFocus,updateStateOnFocusChange:!1},e)),React.createElement(React.Fragment,null,e,(this.state.mouse||this.state.focus&&getFocusVisible())&&!this.props.disabled&&this.state.anchorElement?React.createElement(Callout,{anchorElement:this.state.anchorElement,anchorOffset:this.props.anchorOffset||this.state.anchorOffset,anchorOrigin:this.props.anchorOrigin||this.state.anchorOrigin,anchorPoint:this.state.anchorPoint,calloutOrigin:this.props.tooltipOrigin||this.state.tooltipOrigin,className:css(this.props.className,"bolt-tooltip"),fixedLayout:this.props.fixedLayout,id:this.props.id,portalProps:{className:"bolt-tooltip-portal"}},React.createElement("div",{className:"bolt-tooltip-content"},this.props.renderContent&&this.props.renderContent()||this.props.text||this.state.innerText)):null)},o.prototype.componentWillUnmount=function(){-1!==this.openTimeout&&window.clearTimeout(this.openTimeout)},o.defaultProps={delayMs:250},o}(React.Component);export{Tooltip};